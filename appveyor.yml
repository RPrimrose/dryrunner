version: 1.0.{build}
skip_tags: false
configuration: Release

install:
- set IIS_USER_HOME=%USERPROFILE%\Documents\IISExpress
- md %IIS_USER_HOME%\Logs
- md %IIS_USER_HOME%\TraceLogFiles
- netsh firewall add portopening TCP 8888 "Open Port 8888"
- netsh firewall add portopening TCP 9000 "Open Port 9000"

init:
- ps: >-
    $parsedReleaseBuildVersion = $env:APPVEYOR_REPO_TAG_NAME -Match "(\d+.\d+.\d+(.\d+)?)"
    
    If($env:appveyor_repo_tag -AND $parsedReleaseBuildVersion) {
      $env:BuildVersion = $matches[0]
      $env:IsGithubRelease = $TRUE
    }
    else {
      $env:BuildVersion = $env:appveyor_build_version
      $env:IsGithubRelease = ""
    }
    
    Write-Host "Build Version: " $env:BuildVersion
    Write-Host "Tag name:  " $env:appveyor_repo_tag
    Write-Host "Commit: " $env:APPVEYOR_REPO_COMMIT_MESSAGE 
    Write-Host "Commit extended:" $env:APPVEYOR_REPO_COMMIT_MESSAGE_EXTENDED 
    
    Write-Host "appveyor_build_version Variable: " $env:appveyor_build_version
  
assembly_info:
  patch: true
  file: '**\AssemblyInfo.*'
  assembly_version: $(BuildVersion)
  assembly_file_version: $(BuildVersion)
  assembly_informational_version: $(BuildVersion)

build:
  project: src/DryRunner.sln
  publish_nuget: true
  publish_nuget_symbols: true
  verbosity: minimal
  
artifacts:
- path: 'src/DryRunner/bin/$(configuration)'
  name: DryRunner

deploy:
- provider: GitHub
  release: $(APPVEYOR_REPO_TAG_NAME)
  auth_token:
    secure: gd108UlSNyLViffYS7AKRgbTQXmzI6N/WgtNXFwkOsO9qGrWrAaJ853qAyv+FXp6
  artifact: 'src/DryRunner/bin/$(configuration)'
  draft: false
  prerelease: false
  on:
    branch: master
    IsGithubRelease: true
- provider: NuGet
  api_key:
    secure: LrIeQprS+E5FzLkdKGYIYHXy/86Kt8YVhTa4J/VhLzGUO+yXnqI+GxDR+K5Wj/VL
  artifact: /.*\.nupkg/
  skip_symbols: false
  on:
    branch: master
    IsGithubRelease: true